<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <!--
    If you use <if condition='isDefined("spring.config.location")'>, you must introduce org.codehaus.janino lib.
    application.properties config info:
      face.module.core.app.name - App name;
      face.module.core.log.path - Log file path;
      face.module.core.log.stashfile.name - Stash log file name;
      face.module.core.log.level.root - Root logger level;
   -->

  <!-- Spring 'application.properties' config file location. -->
  <if condition='isDefined("spring.config.location")'>
    <then>
      <property file="${spring.config.location}"/>
    </then>
    <else>
      <property resource="application.properties"/>
    </else>
  </if>

  <!-- Application name, must be defined in application.properties or set default value. -->
  <if condition='isDefined("face.module.core.app.name")'>
    <then>
      <property scope="context" name="APP_NAME" value="${face.module.core.app.name}"/>
    </then>
    <else>
      <property scope="context" name="APP_NAME" value="face-module-core"/>
    </else>
  </if>

  <!-- Log file parent path, default value ./logs. -->
  <if condition='isDefined("face.module.core.log.path")'>
    <then>
      <property name="LOG_DIR" value="${face.module.core.log.path}"/>
    </then>
    <else>
      <property name="LOG_DIR" value="./logs"/>
    </else>
  </if>

  <!-- Stash log file name and log file full path. -->
  <if condition='isDefined("face.module.core.log.stashfile.name")'>
    <then>
      <!-- If face.module.core.log.file be defined in application.properties file, then use this name for log file name. -->
      <property name="LOG_STASH_FILE" value="${face.module.core.log.stashfile.name}"/>
    </then>
    <else>
      <!-- 日志位置，注意必须要有该路径的访问权限 -->
      <property name="LOG_STASH_FILE" value="${APP_NAME}"/>
    </else>
  </if>

  <!-- Root logger level. -->
  <if condition='isDefined("face.module.core.log.level.root")'>
    <then>
      <property name="ROOT_LEVEL" value="${face.module.core.log.level.root}"/>
    </then>
    <else>
      <property name="ROOT_LEVEL" value="INFO"/>
    </else>
  </if>

  <!-- Default logback configuration. -->
  <include resource="org/springframework/boot/logging/logback/defaults.xml"/>


  <!-- Console log pattern. -->
  <property name="CONSOLE_LOG_PATTERN"
    value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>


  <!-- Log appender start. -->

  <!-- Console log appender. -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>
    <encoder>
      <pattern>${CONSOLE_LOG_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
  </appender>

  <!-- Error log appender. -->
  <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <file>${LOG_DIR}/error.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- Daily rollover with compression. -->
      <fileNamePattern>error-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- Keep 7 days worth history. -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} [%level] from %logger in %thread -
        %message%n%xException
      </pattern>
    </encoder>
  </appender>

  <!-- Application log appender. -->
  <appender name="APPLICATION" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/application.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- Daily rollover with compression. -->
      <fileNamePattern>application-log-%d{yyyy-MM-dd_HH}.gz</fileNamePattern>
      <!-- Keep 7 hours worth history. -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} [%level] from %logger in %thread -
        %message%n%xException
      </pattern>
    </encoder>
  </appender>

  <!-- Application access log appender. -->
  <appender name="APPLICATION_ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/application-access.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- Daily rollover with compression. -->
      <fileNamePattern>application-access-log-%d{yyyy-MM-dd_HH:mm}.gz</fileNamePattern>
      <!-- Keep 7 minutes worth history. -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} %message%n</pattern>
      <!-- This will cache 8192 bytes. -->
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>

  <!-- JSON format log appender. For custom log stash config. -->
  <appender name="JSON_LOG_STASH" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/${LOG_STASH_FILE}.json</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_STASH_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <timestamp>
          <timeZone>UTC</timeZone>
        </timestamp>
        <pattern>
          <pattern>
            {
            "level": "%level",
            "app": "${APP_NAME:-}",
            "trace": "%X{X-B3-TraceId:-}",
            "span": "%X{X-B3-SpanId:-}",
            "exportable": "%X{X-Span-Export:-}",
            "pid": "${PID:-}",
            "thread": "%thread",
            "class": "%logger{40}",
            "msg": "%message"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
  </appender>

  <!-- Log appender end. -->


  <!-- Debug > Info > Warn > Error > Fatal(严重错误) -->
  <!-- Define root logger. -->
  <root level="${ROOT_LEVEL}">
    <appender-ref ref="APPLICATION"/>
    <appender-ref ref="APPLICATION_ACCESS"/>
    <appender-ref ref="ERROR"/>
    <appender-ref ref="JSON_LOG_STASH"/>
  </root>

  <!-- Third jar log level config. -->
  <logger name="java.sql" level="INFO"/>
  <logger name="org.springframework" level="WARN"/>
  <logger name="org.mybatis" level="WARN"/>
  <logger name="org.apache.ibatis" level="WARN"/>
  <logger name="org.apache.activemq" level="WARN"/>
  <logger name="redis.clients.jedis" level="INFO"/>
  <logger name="com.google.code.yanf4j.core" level="WARN"/>
  <logger name="net.rubyeye.xmemcached" level="WARN"/>
  <logger name="com.gargoylesoftware.htmlunit" level="OFF"/>
  <!-- If set additivity=false, log msg will not transfer to parent logger. -->
  <logger name="org.springframework.web" level="INFO" additivity="false">
    <appender-ref ref="APPLICATION_ACCESS"/>
  </logger>

</configuration>
